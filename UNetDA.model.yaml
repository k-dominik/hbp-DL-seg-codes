name: U-Net DA
description: U-Net trained on brain vasculature segmentation data from Ludovico Silvestri's European Laboratory for Non-linear Spectroscopy (LENS).
cite:
    - text: "Ronneberger, Olaf et al. U-net: Convolutional networks for biomedical image segmentation. MICCAI 2015."
      doi: https://doi.org/10.1007/978-3-319-24574-4_28
authors:
  - Vasu Subeesh
documentation: documentation/TransferLearningBasedSegmentationWorkflow.md
tags: [unet2d, pytorch, hbp, sga2]
license: MIT

format_version: 0.1.0
language: python
framework: pytorch

source: src.utils.get_unet
optional_kwargs:
    steps:                   4
    first_layer_channels:    64
    num_classes:             2
    num_input_channels:      3
    two_sublayers:           True
    ndims:                   2
    border_mode:             same
    remove_skip_connections: False

test_input: tests/data/ipt10.npy
test_output: tests/data/unetda10.npy
covers: [documentation/covers/UNetCover.png]

inputs:
  - name: raw
    axes: bcyx
    data_type: float32
    data_range: [0, 1]
    shape: [1, 3, 512, 512]

outputs:
  - name: probs
    axes: bcyx
    data_type: float32
    data_range: [-inf, inf]
    halo: [0, 0, 94, 94]
    shape:
      reference_input: raw
      scale: [1, 1, 1, 1]
      offset: [0, 0, 0, 0]

prediction:
  preprocess:
    - spec: https://github.com/bioimage-io/python-bioimage-io/blob/4a12c1823ec6d47feb544cae48b7c01216b603b9/specs/transformations/NormalizeRange.transformation.yaml
      kwargs: {apply_to: 0, data_min: 0.0, data_max: 1.0, output_min: -1.0, output_max: 1.0}
    - spec: https://github.com/bioimage-io/pytorch-bioimage-io/blob/a8863571fde5caeaf79903f71f7913fd2d9a9d01/specs/transformations/EnsureTorch.transformation.yaml
  weights:
      source: https://github.com/subeesh/hbp-DL-seg-codes/releases/download/0.1.0/UNetDAweights.pth.tar
      hash: {}
  postprocess:
    - spec: https://github.com/bioimage-io/pytorch-bioimage-io/blob/a8863571fde5caeaf79903f71f7913fd2d9a9d01/specs/transformations/EnsureNumpy.transformation.yaml
  dependencies: conda:../environment.yaml
